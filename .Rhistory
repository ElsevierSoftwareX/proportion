}
#####TO FIND UPPER LIMITS
exlim302u=function(x,n,alp,e)
{
z=x-1
y=0:z
f2  = function(p) e*dbinom(x,n,p)+sum(dbinom(y,n,p))-(alp/2)
UEX = uniroot(f2,c(0,1))$root
return(UEX)
}
n=5; alp=0.05;e=0.5;a=1;b=1
PlotexplEX(n,alp,e,a,b)
n=5; alp=0.05;e=c(0.1,0.5,0.95,1);a=1;b=1 #Range including Mid-p and Clopper-Pearson
PlotexplEX(n,alp,e,a,b)
library(proportion)
getwd()
library(sand)
C2
n
N
?ciLTx
library(proportion)
?ciLTx
?hypotestBAF1
?pCOpBIAAS
?PlotciAllxg
n=10; th0=0.1; a1=1; b1=1
hypotestBAF1(n,th0,a1,b1)
#"1 < BBaFa01 < 3 : H0 is not worth more than a bare mention
#"3 < BaFa01 < 20 : H0 is positive
#20 < BaFa01 < 150 : strong evidence for H0
#150 < BaFa01 :very strong evidence for H0
?PlotexplSIM
LL=c(0,0.01,0.0734,0.18237,0.3344,0.5492)		#Lower and Upper Limits
UL=c(0.4507,0.6655,0.8176,0.9265,0.9899,1)
n= 5; s=5000; a=1; b=1;
PlotexplSIM(n,LL,UL,s,a,b)
PlotexplSIM<-function(n,LL,UL,s,a,b) #n:No of trials,LL, UL: Lower, Upper Limits, s:No of hypothetical "p", a&b beta parameters for hypo "p'
{
if (missing(n)) stop("'n' is missing")
if (missing(LL)) stop("'Lower limit' is missing")
if (missing(UL)) stop("'Upper Limit' is missing")
if (missing(s)) stop("'s' is missing")
if (missing(a)) stop("'a' is missing")
if (missing(b)) stop("'b' is missing")
if ((class(n) != "integer") & (class(n) != "numeric") || length(n) >1|| n<=0 ) stop("'n' has to be greater than 0")
if ((class(LL) != "integer") & (class(LL) != "numeric") || any(LL < 0)) stop("'LL' has to be a set of positive numeric vectors")
if ((class(UL) != "integer") & (class(UL) != "numeric") || any(UL < 0)) stop("'UL' has to be a set of positive numeric vectors")
if (length(LL) <= n ) stop("Length of vector LL has to be greater than n")
if (length(UL) <= n ) stop("Length of vector UL has to be greater than n")
if (any(LL[0:n+1] > UL[0:n+1] )) stop("LL value have to be lower than the corrosponding UL value")
if ((class(s) != "integer") & (class(s) != "numeric") || length(s)>1 || s<1  ) stop("'b' has to be greater than or equal to 1")
if ((class(a) != "integer") & (class(a) != "numeric") || length(a)>1 || a<0  ) stop("'a' has to be greater than or equal to 0")
if ((class(b) != "integer") & (class(b) != "numeric") || length(b)>1 || b<0  ) stop("'b' has to be greater than or equal to 0")
hp=ew=method=gMean=gMax=gLL=gUL=explUL=explLL=sumLen=NULL
####INPUT n
x=0:n
k=n+1
ewi=matrix(0,k,s)						#Expected length quantity in sum
ew=0									#Expected Length
LE=0
for(i in 1:k)
{
LE[i]=UL[i]-LL[i]
}
sumLE=sum(LE)
####Expected Length
hp=sort(rbeta(s,a,b),decreasing = FALSE)	#HYPOTHETICAL "p"
for (j in 1:s)
{
for(i in 1:k)
{
ewi[i,j]=LE[i]*dbinom(i-1, n,hp[j])
}
ew[j]=sum(ewi[,j])						#Expected Length
}
EL=data.frame(hp,ew)
ggplot2::ggplot(EL, ggplot2::aes(x=hp, y=ew))+
ggplot2::labs(title = "Expected length - Simulation") +
ggplot2::labs(y = "Expected length") +
ggplot2::labs(x = "p") +
ggplot2::geom_vline(ggplot2::aes(xintercept=0.5,color="Cutoff"), linetype=2)+
ggplot2::geom_line(ggplot2::aes(color="Expected length"))+
ggplot2::geom_point(ggplot2::aes(color="red"))+
ggplot2::scale_colour_manual(name='Heading',
values=c('Cutoff'="brown",
'Expected length'='red'),
guide='legend') +
ggplot2::guides(colour = ggplot2::guide_legend(override.aes = list(linetype=c(2,1,1),
linetype=c(1,1,1))))
}
LL=c(0,0.01,0.0734,0.18237,0.3344,0.5492)		#Lower and Upper Limits
UL=c(0.4507,0.6655,0.8176,0.9265,0.9899,1)
n= 5; s=5000; a=1; b=1;
PlotexplSIM(n,LL,UL,s,a,b)
PlotexplSIM<-function(n,LL,UL,s,a,b) #n:No of trials,LL, UL: Lower, Upper Limits, s:No of hypothetical "p", a&b beta parameters for hypo "p'
{
if (missing(n)) stop("'n' is missing")
if (missing(LL)) stop("'Lower limit' is missing")
if (missing(UL)) stop("'Upper Limit' is missing")
if (missing(s)) stop("'s' is missing")
if (missing(a)) stop("'a' is missing")
if (missing(b)) stop("'b' is missing")
if ((class(n) != "integer") & (class(n) != "numeric") || length(n) >1|| n<=0 ) stop("'n' has to be greater than 0")
if ((class(LL) != "integer") & (class(LL) != "numeric") || any(LL < 0)) stop("'LL' has to be a set of positive numeric vectors")
if ((class(UL) != "integer") & (class(UL) != "numeric") || any(UL < 0)) stop("'UL' has to be a set of positive numeric vectors")
if (length(LL) <= n ) stop("Length of vector LL has to be greater than n")
if (length(UL) <= n ) stop("Length of vector UL has to be greater than n")
if (any(LL[0:n+1] > UL[0:n+1] )) stop("LL value have to be lower than the corrosponding UL value")
if ((class(s) != "integer") & (class(s) != "numeric") || length(s)>1 || s<1  ) stop("'b' has to be greater than or equal to 1")
if ((class(a) != "integer") & (class(a) != "numeric") || length(a)>1 || a<0  ) stop("'a' has to be greater than or equal to 0")
if ((class(b) != "integer") & (class(b) != "numeric") || length(b)>1 || b<0  ) stop("'b' has to be greater than or equal to 0")
hp=ew=method=gMean=gMax=gLL=gUL=explUL=explLL=sumLen=NULL
####INPUT n
x=0:n
k=n+1
ewi=matrix(0,k,s)						#Expected length quantity in sum
ew=0									#Expected Length
LE=0
for(i in 1:k)
{
LE[i]=UL[i]-LL[i]
}
sumLE=sum(LE)
####Expected Length
hp=sort(rbeta(s,a,b),decreasing = FALSE)	#HYPOTHETICAL "p"
for (j in 1:s)
{
for(i in 1:k)
{
ewi[i,j]=LE[i]*dbinom(i-1, n,hp[j])
}
ew[j]=sum(ewi[,j])						#Expected Length
}
EL=data.frame(hp,ew)
ggplot2::ggplot(EL, ggplot2::aes(x=hp, y=ew))+
ggplot2::labs(title = "Expected length - Simulation") +
ggplot2::labs(y = "Expected length") +
ggplot2::labs(x = "p") +
ggplot2::geom_vline(ggplot2::aes(xintercept=0.5,color="Cutoff"), linetype=2)+
ggplot2::geom_line(ggplot2::aes(color="Expected length"))+
ggplot2::geom_point(ggplot2::aes(color="red"))+
ggplot2::scale_colour_manual(name='Heading',
values=c('Cutoff'="brown",
'Expected length'='red'),
guide='legend') +
ggplot2::guides(colour = ggplot2::guide_legend(override.aes = list(linetype=c(2,1),
linetype=c(1,1))))
}
LL=c(0,0.01,0.0734,0.18237,0.3344,0.5492)		#Lower and Upper Limits
UL=c(0.4507,0.6655,0.8176,0.9265,0.9899,1)
n= 5; s=5000; a=1; b=1;
PlotexplSIM(n,LL,UL,s,a,b)
x=0:n
k=n+1
ewi=matrix(0,k,s)						#Expected length quantity in sum
ew=0									#Expected Length
LE=0
for(i in 1:k)
{
LE[i]=UL[i]-LL[i]
}
sumLE=sum(LE)
####Expected Length
hp=sort(rbeta(s,a,b),decreasing = FALSE)	#HYPOTHETICAL "p"
for (j in 1:s)
{
for(i in 1:k)
{
ewi[i,j]=LE[i]*dbinom(i-1, n,hp[j])
}
ew[j]=sum(ewi[,j])						#Expected Length
}
EL=data.frame(hp,ew)
ggplot2::ggplot(EL, ggplot2::aes(x=hp, y=ew))+
ggplot2::labs(title = "Expected length - Simulation") +
ggplot2::labs(y = "Expected length") +
ggplot2::labs(x = "p") +
ggplot2::geom_vline(ggplot2::aes(xintercept=0.5,color="Cutoff"), linetype=2)+
ggplot2::geom_line(ggplot2::aes(color="Expected length"))+
ggplot2::geom_point(ggplot2::aes(color="red"))+
ggplot2::scale_colour_manual(name='Heading',
values=c('Cutoff'="brown",
'Expected length'="red"),
guide='legend') +
ggplot2::guides(colour = ggplot2::guide_legend(override.aes = list(linetype=c(2,1),
linetype=c(1,1))))
ggplot2::ggplot(EL, ggplot2::aes(x=hp, y=ew))+
ggplot2::labs(title = "Expected length - Simulation") +
ggplot2::labs(y = "Expected length") +
ggplot2::labs(x = "p") +
ggplot2::geom_vline(ggplot2::aes(xintercept=0.5,color="Cutoff"), linetype=2)+
ggplot2::geom_line(ggplot2::aes(color="Expected length"))+
ggplot2::geom_point(ggplot2::aes(color="red"))+
ggplot2::scale_colour_manual(name='Heading',
values=c('Cutoff'="brown",
'Expected length'="red"),
guide='legend') +
ggplot2::guides(colour = ggplot2::guide_legend(override.aes = list(linetype=c(2,1,1),
linetype=c(1,1,1))))
n=5; alp=0.05;a=1;b=1
PlotexplWD(n,alp,a,b)
gexplWD(n,alp,a,b)
explWD(n,alp,a,b)
lengthWD(n,alp,a,b)
library(proportion)
library(proportion)
library(proportion)
devtools::document()
library(proportion)
library(proportion)
library(proportion)
library(proportion)
library(proportion)
library(proportion)
library(proportion)
library(proportion)
covpAll(n=10, alp=0.05, a=1, b=1, t1=0.93, t2=0.97)
library(proportion)
library(proportion)
library(proportion)
ciAllx(x,n,0.05)
ciAllx(x=0,n=20,0.05)
Paper1=ciAllx(x=0,n=20,0.05)
knitr::kable(Paper1,caption = "Asymptotic methods CI for n = 20, x = 0")
ciEXx(x=0,n=20,0.05,e=c(0.1,0.5,0.95,1))
ciBAx(x=0,n=20,alp=0.05,a=1,b=1)
ciCAllx(x=0,n=20,alp=0.05,c=1/40)
PlotciAllx(x=0,n=20,alp=0.05)
PlotlengthEX(n=20,alp=0.05,e=c(0.1,0.5,0.95,1),a1=1,b1=1)
PlotlengthEX(n=20,alp=0.05,e=c(0.1,0.5,0.95,1))
PlotlengthEX(n=20,alp=0.05,e=c(0.1,0.5,0.95,1),a=1,b=1)
PlotlengthEX(n=10,alp=0.05,e=c(0.1,0.5,0.95,1),a=1,b=1)
covpAll(n=250,alp=0.05,a=1,b=1)
covpAll(n=250,alp=0.05,a=1,b=1,t1=0.93.t2=0.97)
covpAll(n=250,alp=0.05,a=1,b=1,t1=0.93,t2=0.97)
covpAll(n=250,alp=0.05,a=0.5,b=0.5,t1=0.93,t2=0.97)
covpAll(n=263,alp=0.05,a=1,b=1,t1=0.93,t2=0.97)
covpAll(n=250,alp=0.05,a=2,b=2,t1=0.93,t2=0.97)
Paper2.1=hypotestBAF4(n=10, th0=0.9, a0=1,b0=1,a1=0.5,b1=0.5)
knitr::kable(Paper2.1,caption = "Hypothesis test, H0: p <= 0.9 vs. H1: p > 0.9")
ciAAllx(x=16, n=17,alp = 0.05,h=0)
ciAAllx(x=16, n=109,alp = 0.05,h=0)
knitr::kable(Paper2.3,caption = "CI with x=16, n=109 & h=0")
Paper2.3=ciAAllx(x=16, n=109,alp = 0.05,h=0)
knitr::kable(Paper2.3,caption = "CI with x=16, n=109 & h=0")
PlotciAAllx(x=16,n=17,alp=0.05,h=1)
PlotciAAllxg(x=16,n=17,alp=0.05,h=1)
ciEXx(x=98, n=98,alp = 0.05,e=c(0.1,.5,0.95,1))
ciEXx(x=98, n=1,alp = 0.05,e=c(0.1,.5,0.95,1))
ciEXx(x=98, n=150,alp = 0.05,e=c(0.1,.5,0.95,1))
ciEXx(x=98, n=100,alp = 0.05,e=c(0.1,.5,0.95,1))
Paper5.1=probPREx(x=0,n=167,xnew=0,m=10,a1=1,a2=1)
knitr::kable(Paper3.2,caption = "CI-Exact with x=98, n=100")
knitr::kable(Paper5.1,caption = "CI-Exact with x=98, n=100")
Paper5.1=probPREx(x=0,n=167,xnew=0,m=10,a1=1,a2=1)
Paper5.2=probPREx(x=0,n=167,xnew=0,m=50,a1=1,a2=1)
Paper5.3=probPREx(x=0,n=167,xnew=0,m=100,a1=1,a2=1)
Paper5.4=probPREx(x=0,n=167,xnew=0,m=150,a1=1,a2=1)
Paper5.5=probPREx(x=5,n=167,xnew=0,m=10,a1=1,a2=1)
Paper5.6=probPREx(x=25,n=167,xnew=0,m=50,a1=1,a2=1)
Paper5.7=probPREx(x=50,n=167,xnew=0,m=100,a1=1,a2=1)
Paper5.8=probPREx(x=75,n=167,xnew=0,m=150,a1=1,a2=1)
ndf=rbind(Paper5.1,Paper5.2,Paper5.3,Paper5.4,Paper5.5,Paper5.6,Paper5.7,Paper5.8)
knitr::kable(ndf,caption = "Predicted probability with x=0, n=167 varying xnew and m")
Paper5.1=probPREx(x=0,n=167,xnew=0,m=10,a1=1,a2=1)
Paper5.2=probPREx(x=0,n=167,xnew=0,m=50,a1=1,a2=1)
Paper5.3=probPREx(x=0,n=167,xnew=0,m=100,a1=1,a2=1)
Paper5.4=probPREx(x=0,n=167,xnew=0,m=150,a1=1,a2=1)
Paper5.5=probPREx(x=0,n=167,xnew=5,m=10,a1=1,a2=1)
Paper5.6=probPREx(x=0,n=167,xnew=25,m=50,a1=1,a2=1)
Paper5.7=probPREx(x=0,n=167,xnew=50,m=100,a1=1,a2=1)
Paper5.8=probPREx(x=0,n=167,xnew=75,m=150,a1=1,a2=1)
ndf=rbind(Paper5.1,Paper5.2,Paper5.3,Paper5.4,Paper5.5,Paper5.6,Paper5.7,Paper5.8)
knitr::kable(ndf,caption = "Predicted probability with x=0, n=167 varying xnew and m")
pCOpBIBA(n=10,alp=0.05,a1=1,a2=1)
Paper6= pCOpBIBA(n=10,alp=0.05,a1=1,a2=1)
knitr::kable(Paper6,caption = "p-Confidence & p-Bias of Bayesian method for n=10, a1=a2=1")
Paper.1.6=covpAll(n=250,alp=0.05,a=0.5,b=0.5,t1=0.93,t2=0.97)
knitr::kable(Paper1.6,caption = "Coverage probability using covpAll()")
PlotcovpAll(n=10,alp=0.05,a=0.5,b=0.5,t1=0.93,t2=0.97)
?PlotcovpAll
n= 10; alp=0.05; a=1; b=1; t1=0.93; t2=0.97
PlotcovpAll(n,alp,a,b,t1,t2)
PlotcovpAll(n=10,alp=0.05,a=1,b=1,t1=0.93,t2=0.97)
PlotcovpAll(n=10,alp=0.05,a=0.5,b=0.5,t1=0.93,t2=0.97)
PlotcovpAll(n=10,alp=0.05,a=0.5,b=0.5,t1=0.93,t2=0.97)
Paper1.3=ciBAx(x=0,n=20,alp=0.05,a=2,b=2)
knitr::kable(Paper1.3,caption = "Exact method CI using ciBAx(x=0,n=20,alp=0.05,a=2,b=2)")
library(proportion)
Paper1.3=ciBAx(x=0,n=20,alp=0.05,a=2,b=2)
knitr::kable(Paper1.3,caption = "Exact method CI using ciBAx(x=0,n=20,alp=0.05,a=2,b=2)")
library(proportion)
Paper1.3=ciBAx(x=0,n=20,alp=0.05,a=2,b=2)
knitr::kable(Paper1.3,caption = "Exact method CI using ciBAx(x=0,n=20,alp=0.05,a=2,b=2)")
Paper1.3=rbind(Paper1.31,Paper1.32,Paper1.33,Paper1.34)
Paper1.31=ciBAx(x=0,n=20,alp=0.05,a=2,b=2)
Paper1.32=ciBAx(x=0,n=20,alp=0.05,a=1,b=1)
Paper1.33=ciBAx(x=0,n=20,alp=0.05,a=0.05,b=0.05)
Paper1.34=ciBAx(x=0,n=20,alp=0.05,a=0.02,b=2)
Paper1.3=rbind(Paper1.31,Paper1.32,Paper1.33,Paper1.34)
knitr::kable(Paper1.3,caption = "Exact method CI using ciBAx(x=0,n=20,alp=0.05,a=2,b=2)")
Paper1.3.raw=rbind(Paper1.31,Paper1.32,Paper1.33,Paper1.34)
P.reorder=data.frame(Desc=Paper1.3.raw$desc,x=Paper1.3.raw$x,LBAQx=Paper1.3.raw$LBAQx,UBAQx=Paper1.3.raw$UBAQx,LBAHx=Paper1.3.raw$LBAHx,UBAHx=Paper1.3.raw$UBAHx)
Paper1.3.raw
Paper1.31$desc = "Assuming Symmetry"
Paper1.32$desc = "Flat"
Paper1.33$desc = "Jeffreys"
Paper1.34$desc = "Near boundary"
Paper1.3.raw=rbind(Paper1.31,Paper1.32,Paper1.33,Paper1.34)
P.reorder=data.frame(Desc=Paper1.3.raw$desc,x=Paper1.3.raw$x,LBAQx=Paper1.3.raw$LBAQx,
UBAQx=Paper1.3.raw$UBAQx,LBAHx=Paper1.3.raw$LBAHx,UBAHx=Paper1.3.raw$UBAHx)
P.reorder
Paper1.4=ciAAllx(x=0,n=20,alp=0.05,h=2)
knitr::kable(Paper1.4,caption = "Adding Pseudo constant using ciAAllx(x=0,n=20,alp=0.05,h=2)")
Paper1.5=ciCAllx(x=0,n=20,alp=0.05,c=1/40)
knitr::kable(Paper1.5,caption = "Adding Continuity Correction, c = 1/(2n) & using ciCAllx(x=0,n=20,alp=0.05,c=1/40)")
ciCAllx(x=0,n=20,alp=0.05,c=1/40)
Paper1.6=covpAll(n=250,alp=0.05,a=0.5,b=0.5,t1=0.93,t2=0.97)
knitr::kable(Paper1.6,caption = "Coverage probability using covpAll()")
Paper1.6=covpAll(n=250,alp=0.05,a=1,b=1,t1=0.93,t2=0.97)
knitr::kable(Paper1.6,caption = "Coverage probability using covpAll()")
PlotcovpAll(n=10,alp=0.05,a=0.5,b=0.5,t1=0.93,t2=0.97)
PlotcovpAll(n=10,alp=0.05,a=1,b=1,t1=0.93,t2=0.97)
PlotcovpAll(n=250,alp=0.05,a=1,b=1,t1=0.93,t2=0.97)
PlotciAllg(n=10,alp=0.05)
hypotestBAF4(n=10, th0=0.9, a0=1,b0=1,a1=0.5,b1=0.5)
Paper2.1=hypotestBAF4(n=10, th0=0.9, a0=1,b0=1,a1=0.5,b1=0.5)
knitr::kable(Paper2.1,caption = "Hypothesis test, H0: p <= 0.9 vs. H1: p > 0.9")
df1=gcovpW(n,alp,a,b,t1,t2)
df2=gcovpS(n,alp,a,b,t1,t2)
df3=gcovpA(n,alp,a,b,t1,t2)
df4=gcovpLT(n,alp,a,b,t1,t2)
df5=gcovpTW(n,alp,a,b,t1,t2)
df6=gcovpL(n,alp,a,b,t1,t2)
nndf=  rbind(df1,df2,df3,df4,df5,df6)
?PlotcovpBA
n= 10; alp=0.05; a=1;b=1; t1=0.93;t2=0.97;a1=1;a2=1
PlotcovpBA(n,alp,a,b,t1,t2,a1,a2)
library(proportion)
library(proportion)
Paper6= pCOpBIBA(n=10,alp=0.05,a1=1,a2=1)
knitr::kable(Paper6,caption = "p-Confidence & p-Bias of Bayesian method for n=10, a1=a2=1")
probPOSx(x=0,n=167,a1=1,b1=1,t0=0.001)
?probPOSx
x=5; n=5;  a=0.5; b=0.5; th=0.5;
probPOSx(x,n,a,b,th)
probPOSx(x=0,n=167,a=1,b=1,th=0.001)
Paper5.1=probPREx(x=0,n=167,xnew=0,m=10,a1=1,a2=1)
Paper5.2=probPREx(x=0,n=167,xnew=0,m=50,a1=1,a2=1)
Paper5.3=probPREx(x=0,n=167,xnew=0,m=100,a1=1,a2=1)
Paper5.4=probPREx(x=0,n=167,xnew=0,m=150,a1=1,a2=1)
Paper5.5=probPREx(x=0,n=167,xnew=5,m=10,a1=1,a2=1)
Paper5.6=probPREx(x=0,n=167,xnew=25,m=50,a1=1,a2=1)
Paper5.7=probPREx(x=0,n=167,xnew=50,m=100,a1=1,a2=1)
Paper5.8=probPREx(x=0,n=167,xnew=75,m=150,a1=1,a2=1)
ndf=rbind(Paper5.1,Paper5.2,Paper5.3,Paper5.4,Paper5.5,Paper5.6,Paper5.7,Paper5.8)
knitr::kable(ndf,caption = "Predicted probability with x=0, n=167 varying xnew and m")
probPOSx(x=0,n=167,a=1,b=1,th=0.001)
Pa.combo1.001= probPOSx(x=0,n=167,a=1,b=1,th=0.001)
Pa.combo2.001= probPOSx(x=0,n=167,a=0.5,b=0.5,th=0.001)
Pa.combo3.001= probPOSx(x=0,n=167,a=0.042,b=27.96,th=0.001)
Pa.combo4.001= probPOSx(x=0,n=167,a=1,b=666,th=0.001)
Pa.combo5.001= probPOSx(x=0,n=167,a=1,b=398,th=0.001)
Pa.combo1.01= probPOSx(x=0,n=167,a=1,b=1,th=0.01)
Pa.combo2.01= probPOSx(x=0,n=167,a=0.5,b=0.5,th=0.01)
Pa.combo3.01= probPOSx(x=0,n=167,a=0.042,b=27.96,th=0.01)
Pa.combo4.01= probPOSx(x=0,n=167,a=1,b=666,th=0.01)
Pa.combo5.01= probPOSx(x=0,n=167,a=1,b=398,th=0.01)
Pa.combo1.05= probPOSx(x=0,n=167,a=1,b=1,th=0.05)
Pa.combo2.05= probPOSx(x=0,n=167,a=0.5,b=0.5,th=0.05)
Pa.combo3.05= probPOSx(x=0,n=167,a=0.042,b=27.96,th=0.05)
Pa.combo4.05= probPOSx(x=0,n=167,a=1,b=666,th=0.05)
Pa.combo5.05= probPOSx(x=0,n=167,a=1,b=398,th=0.05)
Pa.combo1.1= probPOSx(x=0,n=167,a=1,b=1,th=0.1)
Pa.combo2.1= probPOSx(x=0,n=167,a=0.5,b=0.5,th=0.1)
Pa.combo3.1= probPOSx(x=0,n=167,a=0.042,b=27.96,th=0.1)
Pa.combo4.1= probPOSx(x=0,n=167,a=1,b=666,th=0.1)
Pa.combo5.1= probPOSx(x=0,n=167,a=1,b=398,th=0.1)
df.001=rbind(Pa.combo1.001,Pa.combo2.001,Pa.combo3.001,Pa.combo4.001,Pa.combo5.001)
df.001
df.01=rbind(Pa.combo1.01,Pa.combo2.01,Pa.combo3.01,Pa.combo4.01,Pa.combo5.01)
df.05=rbind(Pa.combo1.05,Pa.combo2.05,Pa.combo3.05,Pa.combo4.05,Pa.combo5.05)
df.1=rbind(Pa.combo1.1,Pa.combo2.1,Pa.combo3.1,Pa.combo4.1,Pa.combo5.1)
df.1
t(df.1)
df001=t(df.001)
df01=t(df.01)
df1=t(df.1)
df05=t(df.05)
df001
tr.df.001=df001[2,]
tr.df.001
tr.df.001=df001[2,]
tr.df.01=df01[2,]
tr.df.1=df1[2,]
tr.df.05=df05[2,]
te.df=rbind(tr.df.001,tr.df.01,tr.df.1,tr.df.05)
te.df
rownames(te.df) <- c("0.001","0.01","0.1","0.5")
te.df
colnames(te.df) <- c("Uniform Prior","Jeffreys prior","Tuyl p1", "Tuyl  p2", "Tuyl p3")
te.df
knitr::kable(te.df,caption = "Posterior probability with x=0, n=167 varying th")
Uniform.Prior=data.frame(Description="Uniform prior",a=1,b=1)
Jeffreys.Prior=data.frame(Description="Jeffreys prior",a=0.5,b=0.5)
Tuyl.sp1=data.frame(Description="Tuyl p1",a=0.042,b=27.96)
Tuyl.sp2=data.frame(Description="Tuyl p2",a=1,b=666)
Tuyl.sp3=data.frame(Description="Tuyl p3",a=1,b=398)
guidance.df=rbind(Uniform.Prior,Jeffreys.Prior,Tuyl.sp1,Tuyl.sp2,Tuyl.sp3)
knitr::kable(guidance.df,caption = "Posterior probability with x=0, n=167 varying th")
library(proportion)
library(proportion)
devtools::build_vignettes(pkg = ".", dependencies = "VignetteBuilder")
devtools::build_vignettes(pkg = ".", dependencies = "VignetteBuilder")
library(proportion)
version
library(proportion)
library(TeachingDemos)
library(ggplot2)
library(knitr)
library(rmarkdown)
devtools::install(build_vignettes = TRUE)
Paper1.31=ciBAx(x=0,n=20,alp=0.05,a=2,b=2)
Paper1.32=ciBAx(x=0,n=20,alp=0.05,a=1,b=1)
Paper1.33=ciBAx(x=0,n=20,alp=0.05,a=0.05,b=0.05)
Paper1.34=ciBAx(x=0,n=20,alp=0.05,a=0.02,b=2)
Paper1.31$desc = "Assuming Symmetry"
Paper1.32$desc = "Flat"
Paper1.33$desc = "Jeffreys"
Paper1.34$desc = "Near boundary"
Paper1.3.raw=rbind(Paper1.31,Paper1.32,Paper1.33,Paper1.34)
P.reorder=data.frame(Desc=Paper1.3.raw$desc,x=Paper1.3.raw$x,LBAQx=Paper1.3.raw$LBAQx,
UBAQx=Paper1.3.raw$UBAQx,LBAHx=Paper1.3.raw$LBAHx,UBAHx=Paper1.3.raw$UBAHx)
knitr::kable(P.reorder,caption = "Bayesian CI using ciBAx() with x=0,n=20,alp=0.05, varying a(2,1,0.05,0.02 and b(2,1,0.05,2)")
ciBAx(x=0,n=20,alp=0.05,a=0.05,b=0.05)
rm(list=ls())
ciBAx(x=0,n=20,alp=0.05,a=0.05,b=0.05)
Paper1.33=ciBAx(x=0,n=20,alp=0.5,a=0.05,b=0.5)
ciBAx(x=0,n=20,alp=0.05,a=0.5,b=0.5)
library(proportion)
tools::buildVignettes(dir=".", tangle=TRUE)
tools::buildVignettes(dir=".", tangle=TRUE)
version(knir)
version(knitr)
packageVersion("knitr")
tools::buildVignettes(dir=".", tangle=TRUE)
devtools::build_vignettes()
?tools::vignetteEngine
devtools::install(build_vignettes = TRUE)
browseVignettes()
devtools::install(build_vignettes = TRUE)
library(proportion)
install.packages("R.rsp")
library(proportion)
library(proportion)
devtools::build_win()
?qbeta
?optimize
?uniroot
library(proportion)
devtools::build_win()
library(proportion)
devtools::install(build_vignettes = TRUE)
devtools::release()
use_build_ignore('cran-comments.md')
devtools::use_build_ignore('cran-comments.md')
devtools::release()
'?tools::toTitleCase '
?tools::toTitleCase
tools::toTitleCase(Confidence Interavals for binomial sampling)
tools::toTitleCase("Confidence Interavals for binomial sampling")
poi="Confidence Interavals for binomial sampling"
tools::toTitleCase(poi)
devtools::release()
devtools::release()
devtools::release()
library(proportion)
res <- revdep_check("ggplot2")
revdep_check_summary(res)
library(devtools)
res <- revdep_check("ggplot2")
revdep_check_summary(res)
res <- revdep_check("proportion")
revdep_check_summary(res)
devtools::build_win()
devtools::release()
devtools::release()
filenames <- c("dummy.Rnw", "Makefile", ".install_extras")
pathS <- system.file("doc/templates", package="R.rsp")
pathD <- "vignettes"
dir.create(pathD)
pathnamesS <- file.path(pathS, gsub("^[.]", ",", filenames))
pathnamesD <- file.path(pathD, filenames)
file.copy(pathnamesS, to=pathnamesD)
devtools::release()
library(proportion)
library(proportion)
getwd()
version
getwd()
ls()
setwd("C:/Users/kanchana/Desktop/02-R-package/proportion")
R.rsp::buildPkgIndexHtml()
setwd("C:/Users/kanchana/Desktop/02-R-package/proportion/vignettes/")
R.rsp::buildPkgIndexHtml()
devtools::release()
devtools::release()
getwd()
tools::Rdindex()
cd..
devtools::release()
